/*
 * This file is generated by jOOQ.
 */
package ru.hse.spb.keylogger.db;


import javax.annotation.Generated;

import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;

import ru.hse.spb.keylogger.db.tables.SchemaVersion;
import ru.hse.spb.keylogger.db.tables.Worker;
import ru.hse.spb.keylogger.db.tables.Worklog;
import ru.hse.spb.keylogger.db.tables.records.SchemaVersionRecord;
import ru.hse.spb.keylogger.db.tables.records.WorkerRecord;
import ru.hse.spb.keylogger.db.tables.records.WorklogRecord;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>public</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<WorkerRecord, Long> IDENTITY_WORKER = Identities0.IDENTITY_WORKER;
    public static final Identity<WorklogRecord, Long> IDENTITY_WORKLOG = Identities0.IDENTITY_WORKLOG;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<SchemaVersionRecord> SCHEMA_VERSION_PRIMARY_KEY = UniqueKeys0.SCHEMA_VERSION_PRIMARY_KEY;
    public static final UniqueKey<SchemaVersionRecord> SCHEMA_VERSION_SCRIPT_UNIQUE = UniqueKeys0.SCHEMA_VERSION_SCRIPT_UNIQUE;
    public static final UniqueKey<WorkerRecord> WORKER_PKEY = UniqueKeys0.WORKER_PKEY;
    public static final UniqueKey<WorkerRecord> WORKER_LOGIN_KEY = UniqueKeys0.WORKER_LOGIN_KEY;
    public static final UniqueKey<WorklogRecord> WORKLOG_PKEY = UniqueKeys0.WORKLOG_PKEY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<WorkerRecord, Long> IDENTITY_WORKER = Internal.createIdentity(Worker.WORKER, Worker.WORKER.ID);
        public static Identity<WorklogRecord, Long> IDENTITY_WORKLOG = Internal.createIdentity(Worklog.WORKLOG, Worklog.WORKLOG.ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<SchemaVersionRecord> SCHEMA_VERSION_PRIMARY_KEY = Internal.createUniqueKey(SchemaVersion.SCHEMA_VERSION, "schema_version_primary_key", SchemaVersion.SCHEMA_VERSION.VERSION);
        public static final UniqueKey<SchemaVersionRecord> SCHEMA_VERSION_SCRIPT_UNIQUE = Internal.createUniqueKey(SchemaVersion.SCHEMA_VERSION, "schema_version_script_unique", SchemaVersion.SCHEMA_VERSION.SCRIPT);
        public static final UniqueKey<WorkerRecord> WORKER_PKEY = Internal.createUniqueKey(Worker.WORKER, "worker_pkey", Worker.WORKER.ID);
        public static final UniqueKey<WorkerRecord> WORKER_LOGIN_KEY = Internal.createUniqueKey(Worker.WORKER, "worker_login_key", Worker.WORKER.LOGIN);
        public static final UniqueKey<WorklogRecord> WORKLOG_PKEY = Internal.createUniqueKey(Worklog.WORKLOG, "worklog_pkey", Worklog.WORKLOG.ID);
    }
}
